{"version":3,"sources":["serviceWorker.js","firebase.js","AppBar.js","components/modal.js","components/Event.js","index.js","Authentication.js","App.js","EditScreen.js"],"names":["Boolean","window","location","hostname","match","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","AppBarComponent","props","_useState","useState","_useState2","Object","slicedToArray","react_default","a","createElement","AppBar","position","color","Toolbar","style","display","Typography","variant","flexGrow","marginleft","Button","onClick","signOut","then","catch","error","alert","message","emails","useStyles","makeStyles","avatar","backgroundColor","blue","SimpleDialog","classes","onClose","selectedValue","open","attendees","undefined","Dialog","aria-labelledby","DialogTitle","id","List","map","attendee","index","ListItem","key","ListItemAvatar","Avatar","className","Person_default","ListItemText","primary","name","SimpleDialogDemo","_React$useState","React","_React$useState2","setOpen","_React$useState3","_React$useState4","setSelectedValue","size","value","theme","wrapper","alignItems","justifyContent","flex","marginBottom","maxWidth","minWidth","padding","margin","card","width","media","height","list","palette","background","paper","hidden","Event","handleClose","console","log","isRSVPedForThisEvent","event","j","UID","user","uid","checkIsFull","length","deleteRSVP","collection","doc","update","FieldValue","arrayRemove","displayName","Card","CardActionArea","CardMedia","image","pictureURL","title","CardContent","gutterBottom","component","time","address","description","capacity","CardActions","disabled","isRSVP","arrayUnion","aria-describedby","DialogContent","DialogContentText","DialogActions","autoFocus","ReactDOM","render","BrowserRouter","Route","exact","path","email","setEmail","_useState3","_useState4","password","setPassword","useEffect","onAuthStateChanged","u","history","push","Paper","marginTop","TextField","placeholder","fullWidth","onChange","e","target","type","Link","to","signInWithEmailAndPassword","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","fullName","setFullName","_useState11","_useState12","createUserWithEmailAndPassword","res","currentUser","updateProfile","setUser","setTasks","events","setEvents","isRSVPed","setRSVPBoolean","admin","setAdmin","query","onSnapshot","snapshot","updated_tasks","forEach","data","text","checked","priority","updated_events","i","isUserCurrentlyRSVPed","flexDirection","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7cae2e5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCA5PqmXUx5rJioN_nsx2hG-6aVW_5XteM\",\r\n  authDomain: \"todo-3534f.firebaseapp.com\",\r\n  databaseURL: \"https://todo-3534f.firebaseio.com\",\r\n  projectId: \"todo-3534f\",\r\n  storageBucket: \"todo-3534f.appspot.com\",\r\n  messagingSenderId: \"165705892393\",\r\n  appId: \"1:165705892393:web:fbe4aef49b071229bc1238\",\r\n  measurementId: \"G-QXY1F1N5K0\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\n\r\nexport const db = firebase.firestore();\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport { auth, db} from \"./firebase\";\r\n\r\nexport default function AppBarComponent(props) {\r\n\r\n  const [admin, setAdmin] = useState('')\r\n\r\n    const handleSignOut = () => {\r\n        auth\r\n          .signOut()\r\n          .then(() => {\r\n            //props.history.push(\"/\");\r\n          })\r\n          .catch(error => {\r\n            alert(error.message);\r\n          });\r\n      };\r\n\r\n    return(\r\n\r\n<AppBar position=\"static\" color=\"primary\">\r\n<Toolbar style={{ display: \"flex\" }}>\r\n  <Typography\r\n    variant=\"h6\"\r\n    color=\"inherit\"\r\n    style={{ flexGrow: 1, marginleft: 30 }}\r\n  >\r\n    67th Ward FHE\r\n  </Typography>\r\n\r\n  {/* <EditIcon color = 'secondary'/> */}\r\n  <Button color=\"inherit\" onClick={handleSignOut}>\r\n    Sign Out\r\n  </Button>\r\n</Toolbar>\r\n</AppBar>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n//   console.log(\"props +++++++ \", props.attendees)\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n  let attendees = props.attendees;\r\n//   const onClose = props.onClose\r\n//   const selectedValue = props.selectedValue\r\n//   const open = props.open\r\n//   const onClose = props.onClose\r\n\r\n\r\n\r\n//   const [all_attendees, setAttendees] = React.useState([]);\r\n\r\n\r\n//   function convertToArrayOfString(val) {\r\n//     console.log(\"start\")\r\n//     for (const j in val) {\r\n//         console.log(\"ASDFJSDF\", val[j])\r\n//     }\r\n//   }\r\n\r\n//   convertToArrayOfString(temp_attendees)\r\n\r\n  if (attendees === undefined) {\r\n    attendees = [];\r\n  }\r\n  \r\n//   console.log(\"temp_attendees +++++++ \", temp_attendees);\r\n//   console.log(\"attendees +++++++ \", all_attendees);\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">Attendees</DialogTitle>\r\n      <List>\r\n        {attendees.map((attendee, index) => (\r\n\r\n            <ListItem key={index}>\r\n                <ListItemAvatar>\r\n                <Avatar className={classes.avatar}>\r\n                    <PersonIcon />\r\n                </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={attendee.name} />\r\n            </ListItem>\r\n        ))}\r\n\r\n        {/* <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Add account\" />\r\n        </ListItem> */}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function SimpleDialogDemo(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n        Attendees\r\n      </Button>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} attendees = {props.attendees} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Modal_Component from \"./modal\"\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { db } from \"../firebase\";\r\nimport * as firebase from 'firebase';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flex: 1,\r\n    marginBottom: 25,\r\n    maxWidth: 345,\r\n    minWidth: 345,\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  card: {\r\n    width: '100%',\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  list: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  hidden: { \r\n    display:\"none\" \r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nexport default function Event(props) {\r\n  const classes = useStyles();\r\n  const [seeAttendees, setSeeAttendees] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    console.log(\"handleClose\")\r\n    setOpen(false);\r\n  };\r\n\r\n  const RSVP = 'false'\r\n\r\n\r\n  function isRSVPedForThisEvent() {\r\n    if (props.event.attendees === undefined) return false;\r\n    for (const j in props.event.attendees) {\r\n      if (props.event.attendees[j].UID === props.user.uid) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  function isRSVPedForThisEventtest() {\r\n    if (props.event.attendees === undefined) return false;\r\n    for (const j in props.event.attendees) {\r\n      if (props.event.attendees[j].UID === props.user.uid) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  function checkIsFull() {\r\n    if (props.event.attendees !== undefined && props.event.attendees.length >= 10) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  const addRSVP = () => {\r\n    console.log(props.event)\r\n    db.collection(\"events\")\r\n      .doc(props.event.id)\r\n      .update({\r\n        attendees: firebase.firestore.FieldValue.arrayUnion({ UID: props.user.uid, name: props.user.displayName})\r\n      })\r\n  };\r\n\r\n  const deleteRSVP = () => {\r\n    console.log(props.event)\r\n    db.collection(\"events\")\r\n      .doc(props.event.id)\r\n      .update({\r\n        attendees: firebase.firestore.FieldValue.arrayRemove({ UID: props.user.uid, name: props.user.displayName})\r\n      }).then(console.log('testing'))\r\n      // .then(setOpen(false));\r\n      handleClose()\r\n  };\r\n\r\n  function rando() {\r\n    console.log(\"rando\")\r\n    deleteRSVP()\r\n    console.log(\"deleteRSVP\")\r\n    handleClose();\r\n    console.log(\"handleClose\")\r\n\r\n  }\r\n\r\n  console.log(props.user.displayName)\r\n    return(\r\n      <div className={classes.wrapper}>\r\n          <Card className={classes.card} >\r\n            <CardActionArea >\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={props.event.pictureURL}\r\n                title=\"Awesome Image\"\r\n                \r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {props.event.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {props.event.time}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {props.event.address}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {props.event.description}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Attendance Capacity {props.event.attendees.length}/{props.event.capacity}\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n\r\n            {/* {(() => {\r\n              switch(RSVP) {\r\n                case 'true':\r\n                    return(\r\n                      <Button size=\"small\" color=\"primary\"\r\n                className={(props.isRSVP === true || checkIsFull() === true) ? 'classes.hidden' : ''}\r\n\r\n                onClick={addRSVP}\r\n                disabled={props.isRSVP === true || checkIsFull() === true}  // If they are RSVPed anywhere, disable OR if it is full, disable it\r\n              >\r\n                RSVP\r\n              </Button>\r\n                    )\r\n                case 'false':\r\n                  return(\r\n                    <Button size=\"small\" color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                disabled={isRSVPedForThisEvent() === false}  // If they arent RSVPed for this event, dont allow them allow them to delete\r\n              >\r\n                Delete RSVP\r\n              </Button>\r\n                  )\r\n\r\n              }\r\n\r\n            })} */}\r\n            \r\n              {isRSVPedForThisEvent()? (\r\n                <Button size=\"small\" color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                disabled={isRSVPedForThisEvent() === false}  // If they arent RSVPed for this event, dont allow them allow them to delete\r\n              >\r\n                Delete RSVP\r\n              </Button>\r\n              ) : (\r\n                <Button size=\"small\" color=\"primary\"\r\n                className={(props.isRSVP === true || checkIsFull() === true) ? 'classes.hidden' : ''}\r\n\r\n                onClick={addRSVP}\r\n                disabled={props.isRSVP === true || checkIsFull() === true}  // If they are RSVPed anywhere, disable OR if it is full, disable it\r\n              >\r\n                RSVP\r\n              </Button>\r\n              )}\r\n\r\n            {/* <Button size=\"small\" color=\"primary\"\r\n                // onClick={seeAttendees = !seeAttendees}\r\n              >\r\n                See Attendees\r\n              </Button> */}\r\n              <Modal_Component user = {props.user} attendees = {props.event.attendees}/>\r\n            </CardActions>\r\n\r\n\r\n            \r\n\r\n            \r\n\r\n\r\n\r\n{/* \r\n            <div className={classes.list}>\r\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                <ListItem button>\r\n                  <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                    Attendees\r\n                  </Typography>\r\n                </ListItem>\r\n\r\n\r\n                <ListItem button>\r\n                  <ListItemText primary=\"Herbert Hoover\" />\r\n                </ListItem>\r\n\r\n                \r\n\r\n              </List>\r\n              <Divider />\r\n\r\n            </div> */}\r\n\r\n\r\n          </Card>\r\n\r\n          <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete Reservation?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete your FHE Reservation? Your soul mate could be there!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={deleteRSVP} color=\"primary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n          </div>\r\n    )\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { App} from \"./App\";\r\nimport {SignIn, SignUp} from \"./Authentication\"\r\nimport {Edit} from './EditScreen'\r\nimport { BrowserRouter, Route} from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <div>\r\n            <Route exact path =\"/\" component ={SignIn}/>\r\n            <Route path = \"/signup\" component = {SignUp}/>\r\n            <Route path = \"/app\" component = {App}/>\r\n            <Route path = '/edit' component = {Edit} />\r\n        </div>\r\n    </BrowserRouter>, \r\n    document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();","import React, { useState, useEffect } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth } from \"./firebase\";\r\n\r\nexport function SignIn(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(u => {\r\n      if (u) {\r\n        props.history.push(\"/app\");\r\n      }\r\n      // do something\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [props.history]);\r\n\r\n  const handleSignIn = () => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {})\r\n      .catch(error => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Sign In\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Paper style={{ width: 480, marginTop: 50, padding: 30 }}>\r\n          <TextField\r\n            placeholder=\"Email\"\r\n            fullWidth=\"true\"\r\n            value={email}\r\n            onChange={e => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            type={\"password\"}\r\n            placeholder=\"Password\"\r\n            fullWidth=\"true\"\r\n            style={{ marginTop: 30 }}\r\n            value={password}\r\n            onChange={e => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              marginTop: 30\r\n            }}\r\n          >\r\n            <Typography>\r\n              Don't have an account? <Link to=\"/signup\">Sign Up</Link>!\r\n            </Typography>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSignIn}>\r\n              Sign In\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function SignUp(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(u => {\r\n      if (u) {\r\n        props.history.push(\"/app\");\r\n      }\r\n      // do somethings\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [props.history]);\r\n\r\n  const handleSignUp = () => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password).then((res) => {\r\n        const user = auth.currentUser;\r\n        return user.updateProfile({\r\n          displayName: fullName,\r\n          // phoneNumber: phone\r\n        })\r\n            user.updatePhoneNumber({\r\n\r\n            })\r\n      })      \r\n      .catch(error => {\r\n        alert(error.message);\r\n      })\r\n      // .then(user => {\r\n      //   user.updateProfile({\r\n      //     displayName: \"nathan\"\r\n      //   })\r\n      \r\n      // })\r\n      \r\n\r\n      // user.updateProfile({\r\n      //   name: \"nathan\"\r\n      // })\r\n      // .then(() => {\r\n      //   db.collection(\"users\")\r\n      //     .doc(auth.currentUser.uid)\r\n      //     .add({ displayName: fullName })\r\n      //     .then(() => {\r\n      //       setFullName(\"\");\r\n      //     });\r\n      // })\r\n      \r\n  };\r\n\r\n  // const handleSignUp = () => {\r\n  //   auth\r\n  //     .createUserWithEmailAndPassword(email, password)\r\n  //     .then(function(user) {\r\n  //       user.updateProfile({\r\n  //         displayName: fullName\r\n  //       }).then(function() {\r\n  //         // Update successful.\r\n  //       })\r\n  //     })\r\n  //     .catch(error => {\r\n  //       alert(error.message);\r\n  //     });\r\n\r\n  // };\r\n\r\n  // var provider = new auth.GoogleAuthProvider();\r\n\r\n  // const handleSignUpGoogle = () => {}\r\n\r\n  // auth.signInWithPopup(provider).then(function(result) {\r\n  //   // This gives you a Google Access Token. You can use it to access the Google API.\r\n  //   var token = result.credential.accessToken;\r\n  //   // The signed-in user info.\r\n  //   var user = result.user;\r\n  //   // ...\r\n  // }).catch(function(error) {\r\n  //   // Handle Errors here.\r\n  //   var errorCode = error.code;\r\n  //   var errorMessage = error.message;\r\n  //   // The email of the user's account used.\r\n  //   var email = error.email;\r\n  //   // The firebase.auth.AuthCredential type that was used.\r\n  //   var credential = error.credential;\r\n  //   // ...\r\n  // });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Sign Up\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Paper style={{ width: 480, marginTop: 50, padding: 30 }}>\r\n        <TextField\r\n            placeholder=\"Full Name\"\r\n            fullWidth=\"true\"\r\n            value={fullName}\r\n            onChange={e => {\r\n              setFullName(e.target.value);\r\n            }}\r\n          />\r\n          {/* <TextField\r\n            placeholder=\"Phone\"\r\n            fullWidth=\"true\"\r\n            style={{ marginTop: 30 }}\r\n            value={phone}\r\n            onChange={e => {\r\n              setPhone(e.target.value);\r\n            }}\r\n          /> */}\r\n          <TextField\r\n            placeholder=\"Email\"\r\n            fullWidth=\"true\"\r\n            style={{ marginTop: 30 }}\r\n            value={email}\r\n            onChange={e => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            type={\"password\"}\r\n            placeholder=\"Password\"\r\n            fullWidth=\"true\"\r\n            style={{ marginTop: 30 }}\r\n            value={password}\r\n            onChange={e => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              marginTop: 30\r\n            }}\r\n          >\r\n            <Typography>\r\n              You have an account? <Link to=\"/\">Sign In!</Link>\r\n            </Typography>\r\n\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSignUp}>\r\n              Sign Up\r\n            </Button>\r\n            {/* <Button variant=\"contained\" color=\"primary\" onClick={handleSignUpGoogle}>\r\n              Sign up with Google\r\n            </Button> */}\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}","/*\r\nChange it to handle actual timestamps\r\nrsvp for future events    /future\r\nonly load this weeks events\r\nadd the automatic calendar thing\r\ngoogle sign-in\r\nstyling\r\nMake the RSVP button into one button\r\nAdd friends - people that already have an account\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport AppBarComponent from \"./AppBar\"\r\nimport EventList from \"./components/Event\"\r\nimport { auth, db } from \"./firebase\";\r\n\r\n\r\nexport function App(props) {\r\n  const [user, setUser] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [events, setEvents] = useState([])\r\n  let [isRSVPed, setRSVPBoolean] = useState(true)\r\n  const [admin, setAdmin] = useState(false)\r\n\r\n  function isUserCurrentlyRSVPed(events) {\r\n    for (const i in events) {\r\n      if (events[i].attendees === undefined) continue;\r\n      for (const j in events[i].attendees) {\r\n        if (events[i].attendees[j].UID === user.uid) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(u => {\r\n      if (u) {\r\n        setUser(u);\r\n      } else {\r\n        props.history.push(\"/\");\r\n      }\r\n      // do something\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [props.history]);\r\n\r\n  // console.log(user)\r\n  useEffect(() => {\r\n    let query;\r\n\r\n    if (user) {\r\n      query = db\r\n        .collection(\"users\")\r\n        .doc(user.uid)\r\n        .collection(\"tasks\")\r\n        .onSnapshot(snapshot => {\r\n          const updated_tasks = [];\r\n          snapshot.forEach(doc => {\r\n            const data = doc.data();\r\n            updated_tasks.push({\r\n              text: data.text,\r\n              checked: data.checked,\r\n              id: doc.id,\r\n              priority: data.priority\r\n            });\r\n          });\r\n          setTasks(updated_tasks);\r\n        });\r\n    }\r\n    return query;\r\n  }, [user]);\r\n\r\n  useEffect(() => { \r\n    let query;\r\n\r\n    if (user) {\r\n      query = db\r\n        .collection(\"events\")\r\n        .onSnapshot(snapshot => {  // onSnapshot method means you constantly listen to a document!!!\r\n          const updated_events = [];\r\n          snapshot.forEach(doc => {\r\n            const data = doc.data();\r\n            updated_events.push({\r\n              id: doc.id,\r\n              name: data.name,\r\n              attendees: data.attendees,\r\n              description: data.description,\r\n              pictureURL: data.pictureURL,\r\n              capacity: data.capacity,\r\n              address: data.address,\r\n              time: data.time\r\n            });\r\n          });\r\n          setEvents(updated_events);\r\n          setRSVPBoolean(isUserCurrentlyRSVPed(updated_events));\r\n        });\r\n    }\r\n    return query;\r\n  }, [user]);\r\n\r\n  useEffect(() => { \r\n    let query;\r\n  \r\n    if (user) {\r\n      query = db\r\n        .collection(\"users\")\r\n        .doc(user.uid)\r\n        .collection('admin')\r\n        .onSnapshot(snapshot => {  // onSnapshot method means you constantly listen to a document!!!\r\n          const updated_admin = false;\r\n          snapshot.forEach(doc => {\r\n            const data = doc.data();\r\n            updated_admin.push({\r\n              admin: data.admin,\r\n            });\r\n          });\r\n          setAdmin(updated_admin);\r\n        });\r\n    }\r\n    return query;\r\n  }, [user]);\r\n\r\n\r\n  // If the user is not valid or doesn't exist, return an \r\n  // empty div instead of what should be in the page\r\n  if (!user) {\r\n    return <div />;\r\n  }\r\n\r\n  console.log(admin);\r\n\r\n  return (\r\n    <div>\r\n      <AppBarComponent user = {user} admin = {admin.admin}/>\r\n      <div style={{ display: \"flex\", marginTop: 30, flexDirection: \"column\", alignItems: \"center\" }}>\r\n      {events.map(events => {\r\n        return <EventList user = {user} event = {events} isRSVP = {isRSVPed}/>   // This is currently giving the red warning\r\n      })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { auth, db} from \"./firebase\";\r\n\r\nexport function Edit(props) {\r\n    return(\r\n\r\n<div>\r\n        Hello World!\r\n</div>\r\n\r\n    )\r\n}"],"sourceRoot":""}